@page  "/"
@layout CenteredCardLayout
@inject NavigationManager NavigationManager

<center>
    <div>
        <br /><br /><br /><br /><br />
    </div>
    <div>
        <h3 style="font-weight:bold; color:#3da081">Zaloguj się</h3>
    </div>
    <div>
        <br />
    </div>
    <EditForm Model="Log">
        <DataAnnotationsValidator />
        <div class="col-12 row">
            <input class="form-control col-12" placeholder="email/id" @bind-value="Log.Login" />
            <ValidationMessage For="@(() => Log.Login)" />
        </div>
        <br />
        <div class="col-12 row">
            <input type="password" class="form-control col-12" placeholder="hasło" @bind-value="Log.Password" />
            <ValidationMessage For="@(() => Log.Password)" />
        </div>
        <br />
        <div class="col-12 row">
            <span class="col-12"></span>
            <input type="submit" class="form-control col-6 btn btn-primary" @onclick="LoginSubmit" value="Zaloguj się" />
            <a href="/signup" class="col-6">Rejestracja</a>
        </div>
        <br />
        <div class="col-12 row" style="text-align:left; font-weight:bold">
            <span class="col-12"></span>
        </div>
    </EditForm>
    <div class="form-group">
        <SfToast @ref="InvalidLogin" Title="Błędne dane logowania!" Timeout=2000 Content="@ToastContent">
            <ToastPosition X="Center"></ToastPosition>
        </SfToast>
    </div>
</center>

@code{

    SfToast InvalidLogin;
    private string ToastContent { get; set; } = "Wprowadzono niepoprawny login lub hasło!";

    // tworzmy obiekt do przechowywania informacji o zalogowanym uzytkowniku
    public static BackendLibrary.Models.EmployeeModel UserLoggedIn = new BackendLibrary.Models.EmployeeModel();

    // tworzymy obiekt do przechowywania informacji o zespole do ktorego przypisany jest zalogowany pracownik
    public static BackendLibrary.Models.CompanyModel UserCompany = new BackendLibrary.Models.CompanyModel();

    private BackendLibrary.Validation.LoginValidation Log = new BackendLibrary.Validation.LoginValidation();

    private void LoginSubmit()
    {
        // tutaj nastepuje przypisanie wszystkich wartosci do obiektu UserLoggedIn, zgodnie z podanym loginem i haslem
        UserLoggedIn = BackendLibrary.DataAccess.EmployeeData.LoginEmployee(Log.Login, Log.Password);

        if (Log.Login != null && Log.Password != null)
        {
            if (UserLoggedIn.If_manager != -1)
            {
                // przypisanie informacji dotyczacych zespolu pracownika
                UserCompany = BackendLibrary.DataAccess.CompanyData.GetById(UserLoggedIn.Company_id);
                NavigationManager.NavigateTo("/kanban");
            }

            else
            {
                InvalidLogin.Show();
            }

        }
    }

    private void HandleValidSubmit()
    {

    }
}