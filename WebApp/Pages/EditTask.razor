@page "/Edit-task"

@inject NavigationManager NavigationManager
@using Syncfusion.Blazor.DropDowns
@inject NavigationManager uriHelper;

<EditForm Model="@Task">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="Tytuł" class="control-label" required>Tytuł</label>
        <input for="Tytuł" class="form-control" @bind-value="Task.name" />
        <ValidationMessage For="@(() => Task.name)" />
    </div>
    <div class="form-group">
        <label for="Opis" class="control-label">Opis</label>
        <input for="Opis" class="form-control" @bind-value="Task.description" />
        <ValidationMessage For="@(() => Task.description)" />
    </div>
    <div class="form-group">
        <label for="Starttime" class="control-label">Czas rozpoczęcia</label>
        <input for="Starttime" type="date" class="form-control" @bind-value="Task.start_time" />
        <ValidationMessage For="@(() => Task.start_time)" />
    </div>
    <div class="form-group">
        <label for="Deadline" class="control-label">Deadline</label>
        <input for="Deadline" type="date" class="form-control" @bind-value="Task.deadline" />
        <ValidationMessage For="@(() => Task.deadline)" />
    </div>
    <div class="form-group">
        <label for="Status" class="control-label">Status zadania</label>
        <input for="Status" class="form-control" @bind-value="Task.status" />
        <ValidationMessage For="@(() => Task.status)" />
    </div>
    <div class="form-group">
        <label for="IfAutoAssigned" class="control-label">Czy przydzielić automatycznie?</label>
        <input for="IfAutoAssigned" type="checkbox" class="form-control" @bind-value="Task.auto_assigned" />
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-block btn-info" data-dismiss="modal" @onclick="UpdateTask">Zapisz</button>
        <SfToast @ref="ToastObj" Title="Zadanie zaktualizowane pomyslnie!" Timeout=3000 Content="@ToastContent">
            <ToastPosition X="Right"></ToastPosition>
        </SfToast>
    </div>
</EditForm>

@code {
    SfToast ToastObj;
    private string ToastContent { get; set; } = "Zadanie zostało zaktualizowane.";
    private BackendLibrary.Validation.TaskValidation Task;

    protected override void OnInitialized()
    {
        Task = new BackendLibrary.Validation.TaskValidation();
    }

    /// <summary>
    /// Aktualizuje w bazie danych zadanie, które zostało nakreślone w gui aplikacji.
    /// </summary>
    private void UpdateTask()
    {
        if (Task.name != null && Task.description != null && Task.status != null)
        {
            BackendLibrary.Models.TaskModel updatedTask =
            new BackendLibrary.Models.TaskModel(WebApp.Pages.TasksList.SelectedTask.Task_id, WebApp.Pages.Login.UserLoggedIn.Company_id, Task.name, Task.description, Task.start_time, Task.deadline, Task.status, Task.auto_assigned);
            BackendLibrary.DataAccess.TaskData.UpdateTask(updatedTask);

            ToastObj.Show();
        }
    }
}

<style>

    .form-group {
        padding-top: 15px;
        width: 350px;
        margin: 0 auto;
    }
</style>